/*
* Программирование граничит с математикой. Одна из типовых задач для новичков: определение числа Фибоначчи по заданному значению. Есть несколько разнообразных реализаций. Но интереснее всего реализовать через рекурсию.

Немного теории:

Числа Фибоначчи – это элементы последовательности, каждый элемент которой равен сумме двух предыдущих элементов. Исключением является нулевой и первый элементы. Они равны 0 и 1 соответственно.

Рекурсия – это вызов функции через саму себя. Например, в нашем случае мы вызовем функцию для числа n, а внутри функции вызовется функция для чисел n-1 и n-2. И так далее, до того, пока n не будет равно 0 и 1.

Техническое задание:

Создать рекурсивный алгоритм, который выводит нужное значение числа Фибоначчи.

Реализация:

Разберем сам метод fib().

● Основная его часть – вызов себя же, только с другими параметрами, по формуле fib(n - 1) + fib(n - 2).

● Важная часть – присвоить нулевому и первому элементу последовательности значения 0 и 1 соответственно.

Реализация через рекурсию несет в себе большие затраты по времени так как мы не где не храним значение элементов последовательности. Например, при поиске 4 элемента последовательности, мы дважды обращаемся к элементу 2 (в случае, когда ищем четвертый элемент (3+2) и в случае поиска третьего элемента (2+1).
*
* */
package TypicalTasks;

public class FibonacciValue
{
    // Создаем рекурсивный метод
    static public Integer fib(Integer n)  {

        // Нулевой элемент последовательности Фибоначчи = 0
        if(n == 0)
            return 0;

            // Первый элемент последовательности Фибоначчи = 1
        else if(n == 1)
            return 1;

            // Число Фибоначчи = сумме двух предыдущих элементов последовательности
        else
            return fib(n - 1) + fib(n - 2);
    }


    public static void main(String[] args) {

        //Создаем переменную num и передаем в нее номер нужного элемента
        Integer num = new Integer(10);
        System.out.println(num + " элемент последовательности Фибоначчи = " + fib(num));

    }
}
